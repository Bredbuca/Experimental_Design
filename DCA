# Diseños completamente aleatorizados
# Especializacion en estadistica

# Determinación del número de repeticiones
install.packages("daewr")
library(daewr)
rmin <-2 #smallest number of replicates considered
rmax <-10 # largest number of replicates considered
alpha <- rep(0.05, rmax - rmin +1)
alpha
sigma <-1.058
sigma
nlev <- 4
nreps <- rmin:rmax
Delta <- 5
power <- Fpower1(alpha,nlev,nreps,Delta,sigma)
power

#arreglo de campo
set.seed(7638)
f <- factor( rep( c("T0", "T1", "T2", "T3", "T4" ), each = 10))
fac <- sample( f, 50)
fac
eu <- 1:50
plan <- data.frame( parcela=eu, tratamientos=fac )
plan
write.csv( plan, file = "Plan.csv", row.names = FALSE)

#Ejercicio 4 capitulo 2 Lawson
library(readxl)
PolvoHornear <- read_excel("PolvoHornear.xlsx")
View(PolvoHornear)
attach(PolvoHornear)

#análisis descriptivo
summary(PolvoHornear)
hist(Altura)
boxplot(Altura~Tratamiento)
std<-sqrt(var(Altura))
std
#ANOVA a una vía CRD
mod_1<-aov(Altura~Tratamiento)
anova(mod_1)
X<-model.matrix(mod_1)
qr(X)$rank
plot(mod_1)
shapiro.test(resid(mod_1))



# Modelamiento de CDR con falsas repeticiones

peces<-read.table("~/Base de datos/FishTank.txt", h=T)
attach(peces)
summary(peces)

#modelamiento sin corrección de variables
mod1<-aov(WtGain~Diet)
anova(mod1)

#correccion por tipo de variable
#mal por estructura del error
Diet<-as.factor(Diet)
mod2<-aov(WtGain~Diet)
anova(mod2)
summary(mod2)

#modelamiento correcto
mod3<-aov(WtGain~Diet + Error(Tank/Diet))
anova(mod3)
summary(mod3)


#modelamiento anova completo con dos FV
Tank<-as.factor(Tank)
mod4<-aov(WtGain~Diet + Tank)
anova(mod4)
summary(mod4)

#Para generar la matriz de diseño.
mod5<-aov(WtGain~Diet+Tank/Diet)
X<-model.matrix(mod5)
qr(X)$
  
View(model.matrix(mod5))
#PRUEBAS DE COMPARACION MULTIPLE
library(agricolae)
print(HSD.test(WtGain, Diet, 9,12, alpha = 0.05))




#EJERCICIO DATOS DE FOTOSINTESIS
#DCA con 3 rep y 6 subrep
#se mide fotosintesis neta en micromoles de CO2 por m2 por seg
#T0=quimico, T1= quim + biologico
#las subrepeticiones son hojas seleccionadas al azar en cada UE
library(readxl)

IRGA_C <- read_excel("~/bases_de_datosDE/IRGA_C.xlsx")
View(IRGA_C)
#analisis exploratorio
#attach(IRGA)
summary(IRGA_C)
str(IRGA_C)
hist(IRGA_C$Fotosintesis)
boxplot(IRGA_C$Fotosintesis~IRGA_C$Tratamiento)
#Modelamiento
#modelo errado, no se consideran las subrepeticiones
mod_0<-aov(Fotosintesis~Tratamiento, data = IRGA_C)
anova(mod_0)
hist(resid(mod_0))
shapiro.test(resid(mod_0))
bartlett.test(Fotosintesis~Tratamiento, data = IRGA_C)
plot(mod_0)

#modelo con test F correcto
mod_1<-aov(Fotosintesis~Tratamiento + 
             Error(Repeticion:Tratamiento),IRGA_C)
summary(mod_1)

#Prueba de Tukey

library(emmeans)
emmeans(mod_1, pairwise ~ Tratamiento, adjust = "tukey")

#MODELO PROMEDIANDO LAS 6 REPETICIONES
library(readxl)
IRGA_2PRO <- read_excel("~/bases_de_datosDE/IRGA_2_AVG.xlsx")
View(IRGA_2PRO)
summary(IRGA_2PRO)
boxplot(IRGA_2PRO$Fotosintesis~IRGA_2PRO$Tratamiento)
hist(IRGA_2PRO$Fotosintesis)
#modelo test F correcto
mod_2<-aov(Fotosintesis~Tratamiento, IRGA_2PRO)
summary(mod_2)
shapiro.test(resid(mod_2))
bartlett.test(Fotosintesis~Tratamiento, IRGA_2PRO)
plot(mod_2)
summary(IRGA_2PRO)
boxplot(IRGA_2PRO$Fotosintesis~IRGA_2PRO$Tratamiento)
hist(IRGA_2PRO$Fotosintesis)



#DISEÑOS FACTORIALES COMPLETAMENTE ALEATORIZADOS
# EJERCICIO 2.12 CASELLA
Shrimp<-read.table("Shrimp.txt", h=T)
camaron_1<-read.table("shrimp_1.txt", h=T)
summary(camaron)
attach(camaron)
detach(camaron)
#exploratorio
Shrimp$Temp<-as.factor(Shrimp$Temp)
Shrimp$Density<-as.factor(Shrimp$Density)
Shrimp$Salinity<-as.factor(Shrimp$Salinity)
boxplot(WeightGain~Temp)
boxplot(WeightGain~Density)
boxplot(WeightGain~Salinity)
boxplot(WeightGain~Treatment)
#modelar
mod_1<-aov(Shrimp$WeightGain~Shrimp$Temp*Shrimp$Density*Shrimp$Salinity)
anova(mod_1)
plot(TukeyHSD(mod_1))
TukeyHSD(mod_1)
library(agricolae)
print(HSD.test(Shrimp$WeightGain, Shrimp$Temp, 24,  2904))
print(HSD.test(Shrimp$WeightGain, Shrimp$Density, 24,  2904))
print(HSD.test(Shrimp$WeightGain, Shrimp$Salinity, 24,  2904))
#interacciones
interaction.plot(Shrimp$Salinity, Shrimp$Temp, Shrimp$WeightGain, mean)
interaction.plot(Shrimp$Salinity, Shrimp$Density, Shrimp$WeightGain, mean)
interaction.plot(Shrimp$Density, Shrimp$Temp, Shrimp$WeightGain, mean)
#bondad de ajuste
CV<-100*sqrt(2904)/(mean(WeightGain))
CV
#supuestos
shapiro.test(resid(mod_1))
bartlett.test(camaron_1$WeightGain~camaron_1$Temp)
bartlett.test(WeightGain~Density)
bartlett.test(camaron_1$WeightGain~camaron_1$Salinity)
bartlett.test(WeightGain~Treatment)
plot(mod_1)
camaron
library(MASS)
boxcox(mod_1)
install.packages("car")
library(car)
help(aov)

#usando lm
options(contrasts=c("contr.sum","contr.poly"))

mod_2<-aov(Shrimp$WeightGain~Shrimp$Temp*Shrimp$Density*Shrimp$Salinity)
#Finally, call the drop1 function on each model component:
drop1(mod_2, .~., test="F")

# modelos mixtos
library(daewr)
gagerr
modr1 <- aov( y ~ part + oper + part:oper, data = gagerr)
summary(modr1)

#Componentes de varianza estimaciones
sigma2 <- .000752
sigma2po <- (0.026885 - sigma2) / 2
sigma2po
sigma2o <- (0.014852 - sigma2 - 2 * sigma2po ) / 20
sigma2o
sigma2p <- (.160991 - sigma2 - 2 * sigma2po ) / 6
cat("Method of Moments Variance Component Estimates","\n",
      + "Var(error)=",sigma2,"\n","Var(part x oper)=",sigma2po,"\n",
      + "Var(oper)=",sigma2o,"\n","Var(part)=",sigma2p,"\n")

#uso de librerialme4
#factores aleatorios cruzados
library(lme4)
library(Matrix)
modr2 <- lmer(y ~ 1 + (1|part) + (1|oper) + (1|part:oper),
                data = gagerr)
summary(modr2)
confint(modr2)

# 2 factores aleatorios B anidado en A

mod2 <- aov( elasticity ~ supplier + supplier:batch +
               + supplier:batch:sample, data = rubber)
modr3 <- lmer( elasticity ~ 1+ (1|supplier) +
                 + (1|supplier:batch) + (1|supplier:batch:sample), data = rubber)
modr3
summary(modr3)

# modelos mixtos, con arreglo factorial 2^2.diseños con factores fijos y aleatorios.
mod4 <- aov( residue ~ form + tech + form:tech + plot:form:tech,
             data = pesticide)
summary(mod4)
#test correctos para forma de aplicacion
1-pf(0.00002/0.00059,1,4) #para forma de aplicacion
1-pf(0.03231/0.00059,1,4) #tecnica
1-pf(0.00219/0.00059,1,4) #forma: tecnica

library(lme4)
c1 <- c( -.5, .5 )
mod5 <- lmer( residue ~ 1 + form + form:tech +
                  (1|plot:form:tech), contrasts = list( form = c1,
                                                           tech = c1), data = pesticide, REML = FALSE)
summary(mod5)
confint(mod5)

library(lsmeans)
lsmeans(mod5, pairwise ~ tech, adjust = c("tukey"))

lsmeans(mod5, pairwise ~ form, adjust = c("tukey"))

#modelo 6
mod6 <- lm( residue ~ 1 + form + tech + form:tech, contrasts = list( form = c1,
                                                      tech = c1), data = pesticide, REML=FALSE)
summary(mod6)

#modelo 7
#razon de verosimilitudes para efecto aleatorio
mod7 <- lmer( residue ~ 1 + form + tech + form:tech +
                (1|plot:form:tech), contrasts = list( form = c1,
                                                      tech = c1), data = pesticide, REML = FALSE)
summary(mod7)
irtstat<-as.numeric(2*logLik(mod5)-logLik(mod6))
pvalor<-pchisq(irtstat,1,lower=FALSE)
irtstat2<-as.numeric(2*logLik(mod5)-logLik(mod7))
pvalor2<-pchisq(irtstat2,1,lower=FALSE)

mod8<-lmer( residue ~ 1  + form:tech +
              (1|plot:form:tech), contrasts = list( form = c1,
                                                    tech = c1), data = pesticide, REML = FALSE)
irstat3<-as.numeric(2*logLik(mod5)-logLik(mod8))
pvalor3<-pchisq(irstat3,1,lower=FALSE)

  
